// Code generated by protoc-gen-go. DO NOT EDIT.
// source: logging-service.proto

package v2

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type User struct {
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UserId               int64                `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	TypeId               int64                `protobuf:"varint,3,opt,name=typeId,proto3" json:"typeId,omitempty"`
	Content              string               `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_1fb7a78083aef92b, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *User) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *User) GetTypeId() int64 {
	if m != nil {
		return m.TypeId
	}
	return 0
}

func (m *User) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

// CREATE
type CreateUserRequest struct {
	Api                  string   `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	User                 *User    `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateUserRequest) Reset()         { *m = CreateUserRequest{} }
func (m *CreateUserRequest) String() string { return proto.CompactTextString(m) }
func (*CreateUserRequest) ProtoMessage()    {}
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1fb7a78083aef92b, []int{1}
}

func (m *CreateUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateUserRequest.Unmarshal(m, b)
}
func (m *CreateUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateUserRequest.Marshal(b, m, deterministic)
}
func (m *CreateUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateUserRequest.Merge(m, src)
}
func (m *CreateUserRequest) XXX_Size() int {
	return xxx_messageInfo_CreateUserRequest.Size(m)
}
func (m *CreateUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateUserRequest proto.InternalMessageInfo

func (m *CreateUserRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *CreateUserRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type CreateUserResponse struct {
	Api                  string   `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	Status               int32    `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateUserResponse) Reset()         { *m = CreateUserResponse{} }
func (m *CreateUserResponse) String() string { return proto.CompactTextString(m) }
func (*CreateUserResponse) ProtoMessage()    {}
func (*CreateUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1fb7a78083aef92b, []int{2}
}

func (m *CreateUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateUserResponse.Unmarshal(m, b)
}
func (m *CreateUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateUserResponse.Marshal(b, m, deterministic)
}
func (m *CreateUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateUserResponse.Merge(m, src)
}
func (m *CreateUserResponse) XXX_Size() int {
	return xxx_messageInfo_CreateUserResponse.Size(m)
}
func (m *CreateUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateUserResponse proto.InternalMessageInfo

func (m *CreateUserResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *CreateUserResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

// FIND
type FindUsersRequest struct {
	Api                  string               `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	CreatedAtFrom        *timestamp.Timestamp `protobuf:"bytes,2,opt,name=createdAtFrom,proto3" json:"createdAtFrom,omitempty"`
	CreatedAtTo          *timestamp.Timestamp `protobuf:"bytes,3,opt,name=createdAtTo,proto3" json:"createdAtTo,omitempty"`
	UserId               int64                `protobuf:"varint,4,opt,name=userId,proto3" json:"userId,omitempty"`
	TypeId               int64                `protobuf:"varint,5,opt,name=typeId,proto3" json:"typeId,omitempty"`
	Content              string               `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	Limit                int32                `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               int32                `protobuf:"varint,8,opt,name=offset,proto3" json:"offset,omitempty"`
	OrderBy              string               `protobuf:"bytes,9,opt,name=orderBy,proto3" json:"orderBy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FindUsersRequest) Reset()         { *m = FindUsersRequest{} }
func (m *FindUsersRequest) String() string { return proto.CompactTextString(m) }
func (*FindUsersRequest) ProtoMessage()    {}
func (*FindUsersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1fb7a78083aef92b, []int{3}
}

func (m *FindUsersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindUsersRequest.Unmarshal(m, b)
}
func (m *FindUsersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindUsersRequest.Marshal(b, m, deterministic)
}
func (m *FindUsersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindUsersRequest.Merge(m, src)
}
func (m *FindUsersRequest) XXX_Size() int {
	return xxx_messageInfo_FindUsersRequest.Size(m)
}
func (m *FindUsersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindUsersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindUsersRequest proto.InternalMessageInfo

func (m *FindUsersRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *FindUsersRequest) GetCreatedAtFrom() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAtFrom
	}
	return nil
}

func (m *FindUsersRequest) GetCreatedAtTo() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAtTo
	}
	return nil
}

func (m *FindUsersRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *FindUsersRequest) GetTypeId() int64 {
	if m != nil {
		return m.TypeId
	}
	return 0
}

func (m *FindUsersRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *FindUsersRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *FindUsersRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *FindUsersRequest) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

type FindUsersResponse struct {
	Api                  string   `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	Users                []*User  `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindUsersResponse) Reset()         { *m = FindUsersResponse{} }
func (m *FindUsersResponse) String() string { return proto.CompactTextString(m) }
func (*FindUsersResponse) ProtoMessage()    {}
func (*FindUsersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1fb7a78083aef92b, []int{4}
}

func (m *FindUsersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindUsersResponse.Unmarshal(m, b)
}
func (m *FindUsersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindUsersResponse.Marshal(b, m, deterministic)
}
func (m *FindUsersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindUsersResponse.Merge(m, src)
}
func (m *FindUsersResponse) XXX_Size() int {
	return xxx_messageInfo_FindUsersResponse.Size(m)
}
func (m *FindUsersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindUsersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindUsersResponse proto.InternalMessageInfo

func (m *FindUsersResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *FindUsersResponse) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

type Rule struct {
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	RuleId               int64                `protobuf:"varint,2,opt,name=ruleId,proto3" json:"ruleId,omitempty"`
	CreatedBy            int64                `protobuf:"varint,3,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	RuleNumber           int64                `protobuf:"varint,4,opt,name=ruleNumber,proto3" json:"ruleNumber,omitempty"`
	Content              string               `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Rule) Reset()         { *m = Rule{} }
func (m *Rule) String() string { return proto.CompactTextString(m) }
func (*Rule) ProtoMessage()    {}
func (*Rule) Descriptor() ([]byte, []int) {
	return fileDescriptor_1fb7a78083aef92b, []int{5}
}

func (m *Rule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rule.Unmarshal(m, b)
}
func (m *Rule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rule.Marshal(b, m, deterministic)
}
func (m *Rule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rule.Merge(m, src)
}
func (m *Rule) XXX_Size() int {
	return xxx_messageInfo_Rule.Size(m)
}
func (m *Rule) XXX_DiscardUnknown() {
	xxx_messageInfo_Rule.DiscardUnknown(m)
}

var xxx_messageInfo_Rule proto.InternalMessageInfo

func (m *Rule) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Rule) GetRuleId() int64 {
	if m != nil {
		return m.RuleId
	}
	return 0
}

func (m *Rule) GetCreatedBy() int64 {
	if m != nil {
		return m.CreatedBy
	}
	return 0
}

func (m *Rule) GetRuleNumber() int64 {
	if m != nil {
		return m.RuleNumber
	}
	return 0
}

func (m *Rule) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

// CREATE
type CreateRuleRequest struct {
	Api                  string   `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	Rule                 *Rule    `protobuf:"bytes,2,opt,name=rule,proto3" json:"rule,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRuleRequest) Reset()         { *m = CreateRuleRequest{} }
func (m *CreateRuleRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRuleRequest) ProtoMessage()    {}
func (*CreateRuleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1fb7a78083aef92b, []int{6}
}

func (m *CreateRuleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRuleRequest.Unmarshal(m, b)
}
func (m *CreateRuleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRuleRequest.Marshal(b, m, deterministic)
}
func (m *CreateRuleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRuleRequest.Merge(m, src)
}
func (m *CreateRuleRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRuleRequest.Size(m)
}
func (m *CreateRuleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRuleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRuleRequest proto.InternalMessageInfo

func (m *CreateRuleRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *CreateRuleRequest) GetRule() *Rule {
	if m != nil {
		return m.Rule
	}
	return nil
}

type CreateRuleResponse struct {
	Api                  string   `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	Status               int32    `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRuleResponse) Reset()         { *m = CreateRuleResponse{} }
func (m *CreateRuleResponse) String() string { return proto.CompactTextString(m) }
func (*CreateRuleResponse) ProtoMessage()    {}
func (*CreateRuleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1fb7a78083aef92b, []int{7}
}

func (m *CreateRuleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRuleResponse.Unmarshal(m, b)
}
func (m *CreateRuleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRuleResponse.Marshal(b, m, deterministic)
}
func (m *CreateRuleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRuleResponse.Merge(m, src)
}
func (m *CreateRuleResponse) XXX_Size() int {
	return xxx_messageInfo_CreateRuleResponse.Size(m)
}
func (m *CreateRuleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRuleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRuleResponse proto.InternalMessageInfo

func (m *CreateRuleResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *CreateRuleResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

// FIND
type FindRulesRequest struct {
	Api                  string               `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	CreatedAtFrom        *timestamp.Timestamp `protobuf:"bytes,2,opt,name=createdAtFrom,proto3" json:"createdAtFrom,omitempty"`
	CreatedAtTo          *timestamp.Timestamp `protobuf:"bytes,3,opt,name=createdAtTo,proto3" json:"createdAtTo,omitempty"`
	RuleId               int64                `protobuf:"varint,4,opt,name=ruleId,proto3" json:"ruleId,omitempty"`
	CreatedBy            int64                `protobuf:"varint,5,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	RuleNumber           int64                `protobuf:"varint,6,opt,name=ruleNumber,proto3" json:"ruleNumber,omitempty"`
	Content              string               `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	Limit                int32                `protobuf:"varint,8,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               int32                `protobuf:"varint,9,opt,name=offset,proto3" json:"offset,omitempty"`
	OrderBy              string               `protobuf:"bytes,10,opt,name=orderBy,proto3" json:"orderBy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FindRulesRequest) Reset()         { *m = FindRulesRequest{} }
func (m *FindRulesRequest) String() string { return proto.CompactTextString(m) }
func (*FindRulesRequest) ProtoMessage()    {}
func (*FindRulesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1fb7a78083aef92b, []int{8}
}

func (m *FindRulesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindRulesRequest.Unmarshal(m, b)
}
func (m *FindRulesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindRulesRequest.Marshal(b, m, deterministic)
}
func (m *FindRulesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindRulesRequest.Merge(m, src)
}
func (m *FindRulesRequest) XXX_Size() int {
	return xxx_messageInfo_FindRulesRequest.Size(m)
}
func (m *FindRulesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindRulesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindRulesRequest proto.InternalMessageInfo

func (m *FindRulesRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *FindRulesRequest) GetCreatedAtFrom() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAtFrom
	}
	return nil
}

func (m *FindRulesRequest) GetCreatedAtTo() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAtTo
	}
	return nil
}

func (m *FindRulesRequest) GetRuleId() int64 {
	if m != nil {
		return m.RuleId
	}
	return 0
}

func (m *FindRulesRequest) GetCreatedBy() int64 {
	if m != nil {
		return m.CreatedBy
	}
	return 0
}

func (m *FindRulesRequest) GetRuleNumber() int64 {
	if m != nil {
		return m.RuleNumber
	}
	return 0
}

func (m *FindRulesRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *FindRulesRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *FindRulesRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *FindRulesRequest) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

type FindRulesResponse struct {
	Api                  string   `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	Rules                []*Rule  `protobuf:"bytes,2,rep,name=rules,proto3" json:"rules,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindRulesResponse) Reset()         { *m = FindRulesResponse{} }
func (m *FindRulesResponse) String() string { return proto.CompactTextString(m) }
func (*FindRulesResponse) ProtoMessage()    {}
func (*FindRulesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1fb7a78083aef92b, []int{9}
}

func (m *FindRulesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindRulesResponse.Unmarshal(m, b)
}
func (m *FindRulesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindRulesResponse.Marshal(b, m, deterministic)
}
func (m *FindRulesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindRulesResponse.Merge(m, src)
}
func (m *FindRulesResponse) XXX_Size() int {
	return xxx_messageInfo_FindRulesResponse.Size(m)
}
func (m *FindRulesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindRulesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindRulesResponse proto.InternalMessageInfo

func (m *FindRulesResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *FindRulesResponse) GetRules() []*Rule {
	if m != nil {
		return m.Rules
	}
	return nil
}

type Exchange struct {
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	TypeId               int32                `protobuf:"varint,2,opt,name=typeId,proto3" json:"typeId,omitempty"`
	StateId              int32                `protobuf:"varint,3,opt,name=stateId,proto3" json:"stateId,omitempty"`
	RequestId            int64                `protobuf:"varint,4,opt,name=requestId,proto3" json:"requestId,omitempty"`
	DeclarationId        int64                `protobuf:"varint,5,opt,name=declarationId,proto3" json:"declarationId,omitempty"`
	RegisterId           string               `protobuf:"bytes,6,opt,name=registerId,proto3" json:"registerId,omitempty"`
	Content              string               `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Exchange) Reset()         { *m = Exchange{} }
func (m *Exchange) String() string { return proto.CompactTextString(m) }
func (*Exchange) ProtoMessage()    {}
func (*Exchange) Descriptor() ([]byte, []int) {
	return fileDescriptor_1fb7a78083aef92b, []int{10}
}

func (m *Exchange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Exchange.Unmarshal(m, b)
}
func (m *Exchange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Exchange.Marshal(b, m, deterministic)
}
func (m *Exchange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Exchange.Merge(m, src)
}
func (m *Exchange) XXX_Size() int {
	return xxx_messageInfo_Exchange.Size(m)
}
func (m *Exchange) XXX_DiscardUnknown() {
	xxx_messageInfo_Exchange.DiscardUnknown(m)
}

var xxx_messageInfo_Exchange proto.InternalMessageInfo

func (m *Exchange) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Exchange) GetTypeId() int32 {
	if m != nil {
		return m.TypeId
	}
	return 0
}

func (m *Exchange) GetStateId() int32 {
	if m != nil {
		return m.StateId
	}
	return 0
}

func (m *Exchange) GetRequestId() int64 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

func (m *Exchange) GetDeclarationId() int64 {
	if m != nil {
		return m.DeclarationId
	}
	return 0
}

func (m *Exchange) GetRegisterId() string {
	if m != nil {
		return m.RegisterId
	}
	return ""
}

func (m *Exchange) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

// CREATE
type CreateExchangeRequest struct {
	Api                  string    `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	Exchange             *Exchange `protobuf:"bytes,2,opt,name=exchange,proto3" json:"exchange,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateExchangeRequest) Reset()         { *m = CreateExchangeRequest{} }
func (m *CreateExchangeRequest) String() string { return proto.CompactTextString(m) }
func (*CreateExchangeRequest) ProtoMessage()    {}
func (*CreateExchangeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1fb7a78083aef92b, []int{11}
}

func (m *CreateExchangeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateExchangeRequest.Unmarshal(m, b)
}
func (m *CreateExchangeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateExchangeRequest.Marshal(b, m, deterministic)
}
func (m *CreateExchangeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateExchangeRequest.Merge(m, src)
}
func (m *CreateExchangeRequest) XXX_Size() int {
	return xxx_messageInfo_CreateExchangeRequest.Size(m)
}
func (m *CreateExchangeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateExchangeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateExchangeRequest proto.InternalMessageInfo

func (m *CreateExchangeRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *CreateExchangeRequest) GetExchange() *Exchange {
	if m != nil {
		return m.Exchange
	}
	return nil
}

type CreateExchangeResponse struct {
	Api                  string   `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	Status               int32    `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateExchangeResponse) Reset()         { *m = CreateExchangeResponse{} }
func (m *CreateExchangeResponse) String() string { return proto.CompactTextString(m) }
func (*CreateExchangeResponse) ProtoMessage()    {}
func (*CreateExchangeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1fb7a78083aef92b, []int{12}
}

func (m *CreateExchangeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateExchangeResponse.Unmarshal(m, b)
}
func (m *CreateExchangeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateExchangeResponse.Marshal(b, m, deterministic)
}
func (m *CreateExchangeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateExchangeResponse.Merge(m, src)
}
func (m *CreateExchangeResponse) XXX_Size() int {
	return xxx_messageInfo_CreateExchangeResponse.Size(m)
}
func (m *CreateExchangeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateExchangeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateExchangeResponse proto.InternalMessageInfo

func (m *CreateExchangeResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *CreateExchangeResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

// FIND
type FindExchangesRequest struct {
	Api                  string               `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	CreatedAtFrom        *timestamp.Timestamp `protobuf:"bytes,2,opt,name=createdAtFrom,proto3" json:"createdAtFrom,omitempty"`
	CreatedAtTo          *timestamp.Timestamp `protobuf:"bytes,3,opt,name=createdAtTo,proto3" json:"createdAtTo,omitempty"`
	TypeId               int32                `protobuf:"varint,4,opt,name=typeId,proto3" json:"typeId,omitempty"`
	StateId              int32                `protobuf:"varint,5,opt,name=stateId,proto3" json:"stateId,omitempty"`
	RequestId            int64                `protobuf:"varint,6,opt,name=requestId,proto3" json:"requestId,omitempty"`
	DeclarationId        int64                `protobuf:"varint,7,opt,name=declarationId,proto3" json:"declarationId,omitempty"`
	RegisterId           string               `protobuf:"bytes,8,opt,name=registerId,proto3" json:"registerId,omitempty"`
	Content              string               `protobuf:"bytes,9,opt,name=content,proto3" json:"content,omitempty"`
	Limit                int32                `protobuf:"varint,10,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               int32                `protobuf:"varint,11,opt,name=offset,proto3" json:"offset,omitempty"`
	OrderBy              string               `protobuf:"bytes,12,opt,name=orderBy,proto3" json:"orderBy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FindExchangesRequest) Reset()         { *m = FindExchangesRequest{} }
func (m *FindExchangesRequest) String() string { return proto.CompactTextString(m) }
func (*FindExchangesRequest) ProtoMessage()    {}
func (*FindExchangesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1fb7a78083aef92b, []int{13}
}

func (m *FindExchangesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindExchangesRequest.Unmarshal(m, b)
}
func (m *FindExchangesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindExchangesRequest.Marshal(b, m, deterministic)
}
func (m *FindExchangesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindExchangesRequest.Merge(m, src)
}
func (m *FindExchangesRequest) XXX_Size() int {
	return xxx_messageInfo_FindExchangesRequest.Size(m)
}
func (m *FindExchangesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindExchangesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindExchangesRequest proto.InternalMessageInfo

func (m *FindExchangesRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *FindExchangesRequest) GetCreatedAtFrom() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAtFrom
	}
	return nil
}

func (m *FindExchangesRequest) GetCreatedAtTo() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAtTo
	}
	return nil
}

func (m *FindExchangesRequest) GetTypeId() int32 {
	if m != nil {
		return m.TypeId
	}
	return 0
}

func (m *FindExchangesRequest) GetStateId() int32 {
	if m != nil {
		return m.StateId
	}
	return 0
}

func (m *FindExchangesRequest) GetRequestId() int64 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

func (m *FindExchangesRequest) GetDeclarationId() int64 {
	if m != nil {
		return m.DeclarationId
	}
	return 0
}

func (m *FindExchangesRequest) GetRegisterId() string {
	if m != nil {
		return m.RegisterId
	}
	return ""
}

func (m *FindExchangesRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *FindExchangesRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *FindExchangesRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *FindExchangesRequest) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

type FindExchangesResponse struct {
	Api                  string      `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	Exchanges            []*Exchange `protobuf:"bytes,2,rep,name=exchanges,proto3" json:"exchanges,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *FindExchangesResponse) Reset()         { *m = FindExchangesResponse{} }
func (m *FindExchangesResponse) String() string { return proto.CompactTextString(m) }
func (*FindExchangesResponse) ProtoMessage()    {}
func (*FindExchangesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1fb7a78083aef92b, []int{14}
}

func (m *FindExchangesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindExchangesResponse.Unmarshal(m, b)
}
func (m *FindExchangesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindExchangesResponse.Marshal(b, m, deterministic)
}
func (m *FindExchangesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindExchangesResponse.Merge(m, src)
}
func (m *FindExchangesResponse) XXX_Size() int {
	return xxx_messageInfo_FindExchangesResponse.Size(m)
}
func (m *FindExchangesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindExchangesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindExchangesResponse proto.InternalMessageInfo

func (m *FindExchangesResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *FindExchangesResponse) GetExchanges() []*Exchange {
	if m != nil {
		return m.Exchanges
	}
	return nil
}

func init() {
	proto.RegisterType((*User)(nil), "v2.User")
	proto.RegisterType((*CreateUserRequest)(nil), "v2.CreateUserRequest")
	proto.RegisterType((*CreateUserResponse)(nil), "v2.CreateUserResponse")
	proto.RegisterType((*FindUsersRequest)(nil), "v2.FindUsersRequest")
	proto.RegisterType((*FindUsersResponse)(nil), "v2.FindUsersResponse")
	proto.RegisterType((*Rule)(nil), "v2.Rule")
	proto.RegisterType((*CreateRuleRequest)(nil), "v2.CreateRuleRequest")
	proto.RegisterType((*CreateRuleResponse)(nil), "v2.CreateRuleResponse")
	proto.RegisterType((*FindRulesRequest)(nil), "v2.FindRulesRequest")
	proto.RegisterType((*FindRulesResponse)(nil), "v2.FindRulesResponse")
	proto.RegisterType((*Exchange)(nil), "v2.Exchange")
	proto.RegisterType((*CreateExchangeRequest)(nil), "v2.CreateExchangeRequest")
	proto.RegisterType((*CreateExchangeResponse)(nil), "v2.CreateExchangeResponse")
	proto.RegisterType((*FindExchangesRequest)(nil), "v2.FindExchangesRequest")
	proto.RegisterType((*FindExchangesResponse)(nil), "v2.FindExchangesResponse")
}

func init() { proto.RegisterFile("logging-service.proto", fileDescriptor_1fb7a78083aef92b) }

var fileDescriptor_1fb7a78083aef92b = []byte{
	// 808 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x56, 0x4d, 0x6e, 0xd3, 0x40,
	0x14, 0x96, 0x93, 0x38, 0x89, 0x5f, 0x1a, 0x68, 0x47, 0x4d, 0xe4, 0x46, 0x55, 0xa9, 0x2c, 0x24,
	0x22, 0x24, 0x52, 0x29, 0x6c, 0x2a, 0x81, 0x10, 0xa4, 0xb4, 0xa8, 0x12, 0x62, 0xe1, 0xb6, 0xbb,
	0x6e, 0xdc, 0x78, 0x6a, 0x2c, 0x1c, 0x3b, 0xd8, 0xe3, 0x88, 0xb2, 0x66, 0x85, 0x38, 0x44, 0x8f,
	0xc0, 0x8a, 0x43, 0x70, 0x06, 0x56, 0x9c, 0x81, 0x03, 0xa0, 0xf9, 0xf1, 0x6f, 0x33, 0xae, 0xaa,
	0x2e, 0xda, 0x5d, 0xde, 0x9b, 0x79, 0xcf, 0x5f, 0xbe, 0xef, 0x7b, 0x33, 0x03, 0x3d, 0x2f, 0x70,
	0x1c, 0xd7, 0x77, 0x9e, 0x45, 0x38, 0x5c, 0xb8, 0x53, 0x3c, 0x9a, 0x87, 0x01, 0x09, 0x50, 0x6d,
	0x31, 0x1e, 0x3c, 0x72, 0x82, 0xc0, 0xf1, 0xf0, 0x0e, 0xcb, 0x9c, 0xc5, 0xe7, 0x3b, 0xc4, 0x9d,
	0xe1, 0x88, 0x58, 0xb3, 0x39, 0xdf, 0x64, 0x7c, 0x57, 0xa0, 0x71, 0x12, 0xe1, 0x10, 0xed, 0x82,
	0x36, 0x0d, 0xb1, 0x45, 0xb0, 0xfd, 0x86, 0xe8, 0xca, 0xb6, 0x32, 0xec, 0x8c, 0x07, 0x23, 0x5e,
	0x3d, 0x4a, 0xaa, 0x47, 0xc7, 0x49, 0xb5, 0x99, 0x6d, 0x46, 0x7d, 0x68, 0xc6, 0x11, 0x0e, 0x0f,
	0x6d, 0xbd, 0xb6, 0xad, 0x0c, 0xeb, 0xa6, 0x88, 0x68, 0x9e, 0x5c, 0xcc, 0xf1, 0xa1, 0xad, 0xd7,
	0x79, 0x9e, 0x47, 0x48, 0x87, 0xd6, 0x34, 0xf0, 0x09, 0xf6, 0x89, 0xde, 0xd8, 0x56, 0x86, 0x9a,
	0x99, 0x84, 0xc6, 0x1e, 0xac, 0xed, 0xb1, 0xb6, 0x14, 0x91, 0x89, 0x3f, 0xc7, 0x38, 0x22, 0x68,
	0x15, 0xea, 0xd6, 0xdc, 0x65, 0x90, 0x34, 0x93, 0xfe, 0x44, 0x9b, 0xd0, 0xa0, 0x9f, 0x60, 0x9f,
	0xeb, 0x8c, 0xdb, 0xa3, 0xc5, 0x78, 0xc4, 0x0a, 0x58, 0xd6, 0x78, 0x05, 0x28, 0xdf, 0x24, 0x9a,
	0x07, 0x7e, 0x84, 0x97, 0x74, 0xe9, 0x43, 0x33, 0x22, 0x16, 0x89, 0x23, 0xd6, 0x47, 0x35, 0x45,
	0x64, 0xfc, 0xaa, 0xc1, 0xea, 0x81, 0xeb, 0xdb, 0xb4, 0x3c, 0x92, 0x83, 0x78, 0x0d, 0xdd, 0x94,
	0x82, 0x83, 0x30, 0x98, 0x09, 0x34, 0x55, 0x9c, 0x15, 0x0b, 0xd0, 0x4b, 0xe8, 0xa4, 0x89, 0xe3,
	0x80, 0x91, 0x54, 0x5d, 0x9f, 0xdf, 0x9e, 0x63, 0xbd, 0x21, 0x61, 0x5d, 0x95, 0xb1, 0xde, 0x2c,
	0xb0, 0x8e, 0xd6, 0x41, 0xf5, 0xdc, 0x99, 0x4b, 0xf4, 0x16, 0xe3, 0x81, 0x07, 0xb4, 0x4f, 0x70,
	0x7e, 0x1e, 0x61, 0xa2, 0xb7, 0x39, 0x3d, 0x3c, 0xa2, 0x7d, 0x82, 0xd0, 0xc6, 0xe1, 0xe4, 0x42,
	0xd7, 0x78, 0x1f, 0x11, 0x1a, 0xfb, 0xb0, 0x96, 0xe3, 0x4d, 0xca, 0xfb, 0x16, 0xa8, 0x14, 0x2a,
	0xa5, 0xbd, 0x5e, 0x90, 0x8f, 0xa7, 0x8d, 0x9f, 0x0a, 0x34, 0xcc, 0xd8, 0xc3, 0xb7, 0x73, 0x64,
	0x18, 0x7b, 0x38, 0x73, 0x24, 0x8f, 0xd0, 0x66, 0xda, 0x71, 0x72, 0x21, 0x4c, 0x99, 0x25, 0xd0,
	0x16, 0x00, 0xdd, 0xf7, 0x21, 0x9e, 0x9d, 0xe1, 0x50, 0xb0, 0x9a, 0xcb, 0xe4, 0x19, 0x54, 0x25,
	0xbe, 0xa5, 0xb8, 0x2b, 0x7d, 0x4b, 0xdb, 0xe5, 0x7d, 0xcb, 0x0a, 0x58, 0x36, 0xf3, 0x2d, 0x6f,
	0x72, 0x63, 0xdf, 0xfe, 0x11, 0xbe, 0xa5, 0xe5, 0xf7, 0xdb, 0xb7, 0x42, 0x9b, 0x86, 0x5c, 0x1b,
	0xb5, 0x5a, 0x9b, 0x66, 0x95, 0x36, 0x2d, 0x89, 0xbb, 0xdb, 0xcb, 0xdd, 0xad, 0xc9, 0xdc, 0x0d,
	0x4b, 0xdd, 0x2d, 0xd8, 0xad, 0x72, 0x37, 0x85, 0x55, 0x70, 0x37, 0x13, 0x94, 0xa7, 0x8d, 0x7f,
	0x0a, 0xb4, 0xf7, 0xbf, 0x4c, 0x3f, 0x5a, 0xbe, 0x73, 0x4b, 0x87, 0x8b, 0x29, 0x17, 0x26, 0xc8,
	0xa6, 0x9c, 0xda, 0x21, 0x39, 0x74, 0x55, 0x33, 0x09, 0x29, 0xbf, 0x21, 0x37, 0x45, 0x4a, 0x7d,
	0x96, 0x40, 0x8f, 0xa1, 0x6b, 0xe3, 0xa9, 0x67, 0x85, 0x16, 0x71, 0x03, 0x3f, 0x3d, 0x3c, 0x8a,
	0x49, 0xa6, 0x02, 0x76, 0xdc, 0x88, 0xb0, 0x73, 0x87, 0x1f, 0x23, 0xb9, 0x8c, 0x5c, 0x05, 0xe3,
	0x08, 0x7a, 0xdc, 0xdc, 0xc9, 0x7f, 0x97, 0x1b, 0x74, 0x08, 0x6d, 0x2c, 0x36, 0x09, 0x6f, 0xae,
	0x50, 0x12, 0xd3, 0xc2, 0x74, 0xd5, 0x98, 0x40, 0xbf, 0xdc, 0xf4, 0xc6, 0x53, 0x73, 0x59, 0x87,
	0x75, 0xaa, 0x6b, 0xd2, 0xe2, 0x7e, 0x4f, 0x8e, 0xd0, 0xbc, 0x21, 0xd3, 0x5c, 0xad, 0xd0, 0xbc,
	0x79, 0xad, 0xe6, 0xad, 0xeb, 0x35, 0x6f, 0x57, 0x69, 0xae, 0x49, 0x26, 0x0f, 0x96, 0x4f, 0x5e,
	0x47, 0x36, 0x79, 0x2b, 0xc5, 0xc9, 0x3b, 0x81, 0x5e, 0x49, 0x21, 0xa9, 0xca, 0x4f, 0x41, 0x4b,
	0xdc, 0x91, 0x4c, 0x60, 0xd1, 0x3c, 0xd9, 0xf2, 0xf8, 0x9b, 0x02, 0x1d, 0x7a, 0xef, 0x1c, 0xf1,
	0x47, 0x13, 0x7a, 0x01, 0x90, 0xbd, 0x1b, 0x50, 0x8f, 0x96, 0x5d, 0x79, 0x8c, 0x0c, 0xfa, 0xe5,
	0xb4, 0x80, 0xb2, 0x0b, 0x5a, 0x7a, 0xf7, 0xa1, 0x75, 0xba, 0xa9, 0xfc, 0x84, 0x18, 0xf4, 0x4a,
	0x59, 0x5e, 0xc9, 0x60, 0xd0, 0x03, 0xe2, 0x0a, 0x0c, 0x76, 0x07, 0xe6, 0x60, 0xe4, 0xee, 0x96,
	0x3c, 0x8c, 0xc2, 0x6d, 0x21, 0x60, 0xb0, 0x43, 0x2a, 0x83, 0x91, 0xbf, 0x11, 0x32, 0x18, 0x85,
	0x93, 0x6c, 0x7c, 0xa9, 0xc0, 0xc3, 0x84, 0xa5, 0x04, 0xca, 0x3b, 0x78, 0x50, 0x9c, 0x2f, 0xb4,
	0x91, 0x7d, 0xb7, 0x34, 0xc8, 0x83, 0xc1, 0xb2, 0x25, 0x01, 0xeb, 0x2d, 0x74, 0x0b, 0x0a, 0x22,
	0x3d, 0x01, 0x51, 0x1e, 0xbb, 0xc1, 0xc6, 0x92, 0x15, 0x01, 0xf1, 0x47, 0x1d, 0xba, 0xef, 0xd9,
	0x4b, 0xf7, 0x6e, 0x25, 0xbb, 0x23, 0x89, 0xee, 0x99, 0x1c, 0x93, 0x27, 0xbf, 0x6b, 0x2b, 0xbe,
	0xf5, 0xf5, 0xd3, 0xa9, 0x17, 0x38, 0xd1, 0xe9, 0x62, 0xfc, 0xb7, 0xd6, 0xcb, 0x87, 0xa7, 0x33,
	0x4c, 0x2c, 0xdb, 0x22, 0xd6, 0x59, 0x93, 0x1d, 0x6c, 0xcf, 0xff, 0x07, 0x00, 0x00, 0xff, 0xff,
	0x2a, 0xab, 0xc1, 0x57, 0xa7, 0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error)
	FindUsers(ctx context.Context, in *FindUsersRequest, opts ...grpc.CallOption) (*FindUsersResponse, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error) {
	out := new(CreateUserResponse)
	err := c.cc.Invoke(ctx, "/v2.UserService/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) FindUsers(ctx context.Context, in *FindUsersRequest, opts ...grpc.CallOption) (*FindUsersResponse, error) {
	out := new(FindUsersResponse)
	err := c.cc.Invoke(ctx, "/v2.UserService/FindUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	CreateUser(context.Context, *CreateUserRequest) (*CreateUserResponse, error)
	FindUsers(context.Context, *FindUsersRequest) (*FindUsersResponse, error)
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v2.UserService/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_FindUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).FindUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v2.UserService/FindUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).FindUsers(ctx, req.(*FindUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v2.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateUser",
			Handler:    _UserService_CreateUser_Handler,
		},
		{
			MethodName: "FindUsers",
			Handler:    _UserService_FindUsers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "logging-service.proto",
}

// RuleServiceClient is the client API for RuleService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RuleServiceClient interface {
	CreateRule(ctx context.Context, in *CreateRuleRequest, opts ...grpc.CallOption) (*CreateRuleResponse, error)
	FindRules(ctx context.Context, in *FindRulesRequest, opts ...grpc.CallOption) (*FindRulesResponse, error)
}

type ruleServiceClient struct {
	cc *grpc.ClientConn
}

func NewRuleServiceClient(cc *grpc.ClientConn) RuleServiceClient {
	return &ruleServiceClient{cc}
}

func (c *ruleServiceClient) CreateRule(ctx context.Context, in *CreateRuleRequest, opts ...grpc.CallOption) (*CreateRuleResponse, error) {
	out := new(CreateRuleResponse)
	err := c.cc.Invoke(ctx, "/v2.RuleService/CreateRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ruleServiceClient) FindRules(ctx context.Context, in *FindRulesRequest, opts ...grpc.CallOption) (*FindRulesResponse, error) {
	out := new(FindRulesResponse)
	err := c.cc.Invoke(ctx, "/v2.RuleService/FindRules", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RuleServiceServer is the server API for RuleService service.
type RuleServiceServer interface {
	CreateRule(context.Context, *CreateRuleRequest) (*CreateRuleResponse, error)
	FindRules(context.Context, *FindRulesRequest) (*FindRulesResponse, error)
}

func RegisterRuleServiceServer(s *grpc.Server, srv RuleServiceServer) {
	s.RegisterService(&_RuleService_serviceDesc, srv)
}

func _RuleService_CreateRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRuleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuleServiceServer).CreateRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v2.RuleService/CreateRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuleServiceServer).CreateRule(ctx, req.(*CreateRuleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuleService_FindRules_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindRulesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuleServiceServer).FindRules(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v2.RuleService/FindRules",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuleServiceServer).FindRules(ctx, req.(*FindRulesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RuleService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v2.RuleService",
	HandlerType: (*RuleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRule",
			Handler:    _RuleService_CreateRule_Handler,
		},
		{
			MethodName: "FindRules",
			Handler:    _RuleService_FindRules_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "logging-service.proto",
}

// ExchangeServiceClient is the client API for ExchangeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExchangeServiceClient interface {
	CreateExchange(ctx context.Context, in *CreateExchangeRequest, opts ...grpc.CallOption) (*CreateExchangeResponse, error)
	FindExchanges(ctx context.Context, in *FindExchangesRequest, opts ...grpc.CallOption) (*FindExchangesResponse, error)
}

type exchangeServiceClient struct {
	cc *grpc.ClientConn
}

func NewExchangeServiceClient(cc *grpc.ClientConn) ExchangeServiceClient {
	return &exchangeServiceClient{cc}
}

func (c *exchangeServiceClient) CreateExchange(ctx context.Context, in *CreateExchangeRequest, opts ...grpc.CallOption) (*CreateExchangeResponse, error) {
	out := new(CreateExchangeResponse)
	err := c.cc.Invoke(ctx, "/v2.ExchangeService/CreateExchange", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *exchangeServiceClient) FindExchanges(ctx context.Context, in *FindExchangesRequest, opts ...grpc.CallOption) (*FindExchangesResponse, error) {
	out := new(FindExchangesResponse)
	err := c.cc.Invoke(ctx, "/v2.ExchangeService/FindExchanges", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExchangeServiceServer is the server API for ExchangeService service.
type ExchangeServiceServer interface {
	CreateExchange(context.Context, *CreateExchangeRequest) (*CreateExchangeResponse, error)
	FindExchanges(context.Context, *FindExchangesRequest) (*FindExchangesResponse, error)
}

func RegisterExchangeServiceServer(s *grpc.Server, srv ExchangeServiceServer) {
	s.RegisterService(&_ExchangeService_serviceDesc, srv)
}

func _ExchangeService_CreateExchange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateExchangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExchangeServiceServer).CreateExchange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v2.ExchangeService/CreateExchange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExchangeServiceServer).CreateExchange(ctx, req.(*CreateExchangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExchangeService_FindExchanges_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindExchangesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExchangeServiceServer).FindExchanges(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v2.ExchangeService/FindExchanges",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExchangeServiceServer).FindExchanges(ctx, req.(*FindExchangesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ExchangeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v2.ExchangeService",
	HandlerType: (*ExchangeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateExchange",
			Handler:    _ExchangeService_CreateExchange_Handler,
		},
		{
			MethodName: "FindExchanges",
			Handler:    _ExchangeService_FindExchanges_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "logging-service.proto",
}

// LogginServiceClient is the client API for LogginService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogginServiceClient interface {
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error)
	FindUsers(ctx context.Context, in *FindUsersRequest, opts ...grpc.CallOption) (*FindUsersResponse, error)
	CreateRule(ctx context.Context, in *CreateRuleRequest, opts ...grpc.CallOption) (*CreateRuleResponse, error)
	FindRules(ctx context.Context, in *FindRulesRequest, opts ...grpc.CallOption) (*FindRulesResponse, error)
	CreateExchange(ctx context.Context, in *CreateExchangeRequest, opts ...grpc.CallOption) (*CreateExchangeResponse, error)
	FindExchanges(ctx context.Context, in *FindExchangesRequest, opts ...grpc.CallOption) (*FindExchangesResponse, error)
}

type logginServiceClient struct {
	cc *grpc.ClientConn
}

func NewLogginServiceClient(cc *grpc.ClientConn) LogginServiceClient {
	return &logginServiceClient{cc}
}

func (c *logginServiceClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error) {
	out := new(CreateUserResponse)
	err := c.cc.Invoke(ctx, "/v2.LogginService/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logginServiceClient) FindUsers(ctx context.Context, in *FindUsersRequest, opts ...grpc.CallOption) (*FindUsersResponse, error) {
	out := new(FindUsersResponse)
	err := c.cc.Invoke(ctx, "/v2.LogginService/FindUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logginServiceClient) CreateRule(ctx context.Context, in *CreateRuleRequest, opts ...grpc.CallOption) (*CreateRuleResponse, error) {
	out := new(CreateRuleResponse)
	err := c.cc.Invoke(ctx, "/v2.LogginService/CreateRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logginServiceClient) FindRules(ctx context.Context, in *FindRulesRequest, opts ...grpc.CallOption) (*FindRulesResponse, error) {
	out := new(FindRulesResponse)
	err := c.cc.Invoke(ctx, "/v2.LogginService/FindRules", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logginServiceClient) CreateExchange(ctx context.Context, in *CreateExchangeRequest, opts ...grpc.CallOption) (*CreateExchangeResponse, error) {
	out := new(CreateExchangeResponse)
	err := c.cc.Invoke(ctx, "/v2.LogginService/CreateExchange", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logginServiceClient) FindExchanges(ctx context.Context, in *FindExchangesRequest, opts ...grpc.CallOption) (*FindExchangesResponse, error) {
	out := new(FindExchangesResponse)
	err := c.cc.Invoke(ctx, "/v2.LogginService/FindExchanges", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LogginServiceServer is the server API for LogginService service.
type LogginServiceServer interface {
	CreateUser(context.Context, *CreateUserRequest) (*CreateUserResponse, error)
	FindUsers(context.Context, *FindUsersRequest) (*FindUsersResponse, error)
	CreateRule(context.Context, *CreateRuleRequest) (*CreateRuleResponse, error)
	FindRules(context.Context, *FindRulesRequest) (*FindRulesResponse, error)
	CreateExchange(context.Context, *CreateExchangeRequest) (*CreateExchangeResponse, error)
	FindExchanges(context.Context, *FindExchangesRequest) (*FindExchangesResponse, error)
}

func RegisterLogginServiceServer(s *grpc.Server, srv LogginServiceServer) {
	s.RegisterService(&_LogginService_serviceDesc, srv)
}

func _LogginService_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogginServiceServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v2.LogginService/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogginServiceServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogginService_FindUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogginServiceServer).FindUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v2.LogginService/FindUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogginServiceServer).FindUsers(ctx, req.(*FindUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogginService_CreateRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRuleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogginServiceServer).CreateRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v2.LogginService/CreateRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogginServiceServer).CreateRule(ctx, req.(*CreateRuleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogginService_FindRules_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindRulesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogginServiceServer).FindRules(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v2.LogginService/FindRules",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogginServiceServer).FindRules(ctx, req.(*FindRulesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogginService_CreateExchange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateExchangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogginServiceServer).CreateExchange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v2.LogginService/CreateExchange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogginServiceServer).CreateExchange(ctx, req.(*CreateExchangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogginService_FindExchanges_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindExchangesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogginServiceServer).FindExchanges(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v2.LogginService/FindExchanges",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogginServiceServer).FindExchanges(ctx, req.(*FindExchangesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LogginService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v2.LogginService",
	HandlerType: (*LogginServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateUser",
			Handler:    _LogginService_CreateUser_Handler,
		},
		{
			MethodName: "FindUsers",
			Handler:    _LogginService_FindUsers_Handler,
		},
		{
			MethodName: "CreateRule",
			Handler:    _LogginService_CreateRule_Handler,
		},
		{
			MethodName: "FindRules",
			Handler:    _LogginService_FindRules_Handler,
		},
		{
			MethodName: "CreateExchange",
			Handler:    _LogginService_CreateExchange_Handler,
		},
		{
			MethodName: "FindExchanges",
			Handler:    _LogginService_FindExchanges_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "logging-service.proto",
}
